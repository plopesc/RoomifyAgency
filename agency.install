<?php
/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 */
function agency_install() {
  // Enable some agency blocks.
  $default_theme = 'agency_bootstrap_less';
  $admin_theme = 'shiny';

  // Disable all themes.
  db_update('system')
    ->fields(array('status' => 0))
    ->condition('type', 'theme')
    ->execute();

  // Enable default theme.
  db_update('system')
    ->fields(array('status' => 1))
    ->condition('type', 'theme')
    ->condition('name', $default_theme)
    ->execute();

  // Enable admin theme.
  db_update('system')
    ->fields(array('status' => 1))
    ->condition('type', 'theme')
    ->condition('name', $admin_theme)
    ->execute();

  // Enable bootstrap theme.
  db_update('system')
    ->fields(array('status' => 1))
    ->condition('type', 'theme')
    ->condition('name', 'bootstrap')
    ->execute();

  variable_set('theme_default', $default_theme);
  variable_set('admin_theme', $admin_theme);

  // Activate admin theme when editing nodes.
  variable_set('node_admin_theme', '1');

  // Block setup.
  $blocks = array(
    array(
      'module' => 'system',
      'delta' => 'main',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'user',
      'delta' => 'login',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'sidebar_first',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'help',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => -10,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'main',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'help',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'help',
      'pages' => '',
      'cache' => -1,
    ),
  );

  // Drop system / user blocks to ensure correct building
  db_delete('block')->condition('module', 'system')->execute();
  db_delete('block')->condition('module', 'user')->execute();

  // Add in our custom blocks. (defined above)
  $query = db_insert('block')->fields(array('module', 'delta', 'theme', 'status', 'weight', 'region', 'pages', 'cache'));
  foreach ($blocks as $block) {
    $query->values($block);
  }
  $query->execute();

  // From shortcut.install, add shortcuts to the default set on install
  $shortcut_set = shortcut_set_load(SHORTCUT_DEFAULT_SET_NAME);
  $shortcut_set->links = NULL;
  $shortcut_set->links = array(
    array(
      'link_path' => 'admin/appearance/settings',
      'link_title' => st('Theme'),
      'weight' => -17,
    ),
  );
  shortcut_set_save($shortcut_set);

  // Update the menu router information.
  menu_rebuild();

  // Revert features to ensure they are all installed.
  $features = array(
    'agency_amenities',
    'agency_homepage',
    'agency_units',
    'agency_users',
    'agency_system',
    'agency_features_views',
    'agency_image_styles',
    'agency_property_map',
    'agency_theme',
    'agency_property_page_view',
    'agency_editor',
    'agency_blog',
    'agency_review',
  );
  features_revert($features);

  // Remove the "Unit Description" content type.
  node_type_delete('unit_description');

  // Creates amenities terms
  create_agency_amenities_terms();

  // Creates Property Type terms
  create_agency_property_type_terms();

  // Create Footer example text.
  agency_create_footer_bean();
  variable_set('agency_social_facebook', 'https://www.facebook.com/roomifyus');
  variable_set('agency_social_twitter', 'https://twitter.com/roomifyus');


  // Disable Commerce User Orders view.
  $status = variable_get('views_defaults', array());
  $status['commerce_user_orders'] = TRUE;
  variable_set('views_defaults', $status);

  // Set JPEG quality to 100%
  variable_set('image_jpeg_quality', '100');

  // Media upload shouldnâ€™t give public/private file choice.
  variable_set('file_entity_file_upload_wizard_skip_scheme', TRUE);

  // Set E-mail format to Rich Text
  variable_set('mimemail_format', 'rich_text');

  // Ignore any rebuild messages.
  node_access_needs_rebuild(FALSE);

  // Ignore any other install messages.
  drupal_get_messages();
}

/* Create Property Types terms */
function create_agency_property_type_terms() {
 $property_type = array('Apartment', 'Shared Space', 'Villa');
  foreach ($property_type as $type) {
    $vocabulary = taxonomy_vocabulary_machine_name_load('property_type');
    $term = new stdClass();
    $term->name = $type;
    $term->vid = $vocabulary->vid;
    taxonomy_term_save($term);
  }
}

/* Generates Agency footer bean. */
function agency_create_footer_bean() {
  $bean = bean_create(array('type' => 'footer'));
  $bean->label = 'Footer';
  $bean->delta = 'bean-footer';
  $bean->field_footer_text = array(
    'und' => array(array(
      'value' => '<p>Click <a href="/block/bean-footer/edit?destination=admin/content/blocks">here</a> to edit footer.</p>',
      'format' => 'filtered_text',
    )),
  );
  $bean->save();
}
